=Working Title: "The Entropy/Naturalness of Software Documentation"=

==Research Questions==

We expect the cross-entropy of the the following to be in decreasing order

#English text
#Documentation
#Source code of API
#CE found in Docs

==Motivation==
If programmers writing code are repetitive and predictable, I would
bet that questions and answers (and to a lesser extent, formal
documentation) about code are even more repetitive and predictable
because people tend to ask and answer the same questions repeatedly
(ie people learn in similar ways). The entropy comparison that I
would like to see/do is not between general English and code or even
among programs, but between the (informal) documentation of an API and
the programs that use the API. Given that there is English as well as
code fragments in documentation, I would suspect that documentation
would have higher entropy than source code. However, if we use ACER to
extract the code elements and ignore the English text, I would suspect
that source code would have a higher entropy than code elements in
documentation. In effect, I hypothesize that the English between the
code elements is obscuring the repetitive and simple nature of the
topics covered by the documentation.

==For Peter==

* Find data sets and project to examine
* Get postgres converted for so
* create ACE git repo

==For next meeting==

# Turn SO posts for lucene into token file
# Create token file for CEs 
# Run them through MitLM and replicate Figure 1 from Hindle2012ICSE



==Important References==

* "On the Naturalness of Software" Hindle2012ICSE
**Look at citations of this paper on google scholar
* scam2013_submission_20
* "Discovering Essential Code Elements in Informal Documentation" RR2013ICSE
* Do a literature search

== July 27 - August 2nd ==


==July 19-26, 2013==

* Run the tutorial of MITLM.
* Read the paper and researched futher on Method section of ICSE PAPER.
* Prepared one Document on my findings.
* Do tutorial of [https://code.google.com/p/mitlm/wiki/Tutorial mitlm]
** Be able to feed it normal english text
** interpret the output
** join together the sripts just using files, and pipes
* Read the method section of Hindle2012ICSE
** underestand how they lex and get tokens, think about how you would do this?

*Test on [http://git.apache.org/ Apache Lucene] make sure it's java
** Run Abram's tool on source code

*download latest [http://www.clearbits.net/torrents/2141-jun-2013 stackoverflow torrent]
*Read references and find other papers



==July 10-11-12 ==
* Started stackflow torrent on rice. it's under /home/pankaj_k/Downloads directory.
* Started working on Abram's tool.
   * Tool installation requires building(GIT cloning, make, install etc.) of 3-4 APIs(JZMQ, MITLM, ANTLR, PERL Modules).
       * Installation of tool is completed.(faced few issues while building it).
   * Running of tool requires 3 steps.
      1) Run java lexer.(Done.)
      2) Run Server. (InProgress, facing few issues here.)
      3) Run Client. (Not Started yet.)


==July 2 to July 9==
* Created repo and added rigbypc as collaborater.
* got the link of entropy calculator : https://github.com/orezpraw/unnaturalcode
* Downloading is in progress for stackflow torrent.


==June 27, 2013==

*on vaccation until 2nd
*get user account on rice

==Preliminary evidence==

Some preliminary evidence from HttpClient: Documentation covers the
same code elements in multiple documents. While the mailing list
covers the most distinct code elements, documentation in general
covers a limited set of features provided by an API.

<pre>
kind_Id -> 2=class, 5=method, 8=field

 doc_name    | kind_id | distinct_ce | total_ce
---------------+---------+-------------+----------
 clienttut     |       2 |         115 |      602
 clienttut     |       5 |         165 |      436
 clienttut     |       8 |          33 |       61
 coretut       |       2 |         140 |      724
 coretut       |       5 |         260 |      503
 coretut       |       8 |          12 |       40
 stackoverflow |       2 |         115 |     2471
 stackoverflow |       5 |         218 |     2281
 stackoverflow |       8 |          54 |      254
 usermail      |       2 |         255 |     3898
 usermail      |       5 |         460 |     3441
 usermail      |       8 |          94 |      485
</pre>
